{"version":3,"file":"static/js/9593.220120be.chunk.js","mappings":"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","sources":["assets/images/close.jsx","components/ModelLibraryCategory/index.jsx","components/YourModelsTwoCategory/index.jsx","components/UploadModelColumninputOne/index.jsx","modals/Uploadmodel/index.jsx","pages/SelectModelCommon/index.jsx","services/Api/api.js"],"sourcesContent":["import React from \"react\";\r\nexport const CloseSVG = ({\r\n  fillColor = \"#000000\",\r\n  className = \"\",\r\n  ...props\r\n}) => {\r\n  return (\r\n    <svg\r\n      fill={fillColor}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n      className={className}\r\n      {...props}\r\n    >\r\n      <path d=\"M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Img, Text } from \"components\";\r\n\r\nconst ModelLibraryCategory = (props) => {\r\n  return (\r\n    <>\r\n      <div \r\n        onClick={() => props?.updateSelectedModel(props?.productcatalog)}\r\n        className={`${props?.selectedModelName?.modalType === props.productcatalog?.modalType ? \"bg-bluegray_906 border-[2px] border-solid border-teal_A400\": \"bg-gray_901\"} ${props.className}`}\r\n        key={props?.key}\r\n        >\r\n        <Img\r\n          src={props?.imgUrl}\r\n          className=\"h-[60px] w-[60px]\"\r\n          alt=\"report\"\r\n        />\r\n        <Text\r\n          className=\"font-inter font-semibold text-center text-gray_50 w-[auto]\"\r\n          as=\"h6\"\r\n          variant=\"h6\"\r\n        >\r\n          {props?.productcatalog?.modalType}\r\n        </Text>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nModelLibraryCategory.defaultProps = { productcatalog: \"Product Catalog\" };\r\n\r\nexport default ModelLibraryCategory;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport { Img, Text, Button } from \"components\";\r\n\r\nconst YourModelsTwoCategory = (props) => {\r\n  const [isReadMore, setIsReadMore] = useState(true);\r\n  const toggleReadMore = () => {\r\n    setIsReadMore(!isReadMore);\r\n  };\r\n  return (\r\n    <>\r\n      <div \r\n        key={props?.key}\r\n        onClick={() => props?.updateSelectedModel(props?.model)} \r\n        className={`${props.selectedModelName.ModelName === props?.modelname ? \"bg-bluegray_906 border-teal_A400\": \"bg-gray_901 border-none\"} } ${props.className}`}>\r\n        <div className=\"flex flex-col gap-[16px] justify-start my-[4px] w-[100%] relative\">\r\n        {props.selectedModelName.ModelName === props?.modelname &&\r\n            <Img\r\n            src=\"images/img_close_gray_801.svg\"\r\n            className=\"common-pointer absolute h-[24px] right-[0] rounded-[6px] top-[0] w-[auto] hover:scale-125\"\r\n            alt=\"close_One\"\r\n            onClick={() => props?.deleteModelFromBackend(props?.model?.ModelId)}\r\n          />}\r\n          <div className=\"h-[96px] md:ml-[0] ml-[28px] relative w-[55%]\">\r\n            <Img\r\n              src=\"images/img_group25.svg\"\r\n              className=\"absolute h-[96px] inset-y-[0] my-[auto] right-[0] w-[auto]\"\r\n              alt=\"file\"\r\n            />\r\n            <Text\r\n              className=\"absolute bg-bluegray_906 bottom-[28%] font-inter font-normal h-[23px] justify-center left-[0] not-italic outline outline-[0.5px] outline-gray_801 pb-[2px] pt-[5px] px-[7px] rounded-[4px] text-gray_50 text-left w-[61px]\"\r\n              variant=\"body3\"\r\n            >\r\n              {props?.groupThirtyEight}\r\n            </Text>\r\n          </div>\r\n          <div className=\"flex flex-col items-start justify-start w-[100%]\">\r\n            <div className=\"flex flex-row items-center justify-between w-[100%]\">\r\n              <Button className=\"bg-teal_900 cursor-pointer font-inter font-normal min-w-[93px] not-italic px-[10px] py-[4px] rounded-[13px] text-[12px] text-center text-teal_A400 w-[auto]\">\r\n                {props?.ecommerce}\r\n              </Button>\r\n              <Text\r\n                className=\"font-inter font-light text-gray_501 text-left w-[auto]\"\r\n                variant=\"body3\"\r\n              >\r\n                {props?.v10}\r\n              </Text>\r\n            </div>\r\n            <Text\r\n              className=\"font-inter font-normal mt-[12px] not-italic text-gray_50 text-left w-[auto]\"\r\n              variant=\"body2\"\r\n            >\r\n              {props?.modelname}\r\n            </Text>\r\n            {props?.timeZone && (\r\n              props?.timeZone.split(\"\").length < 20 ? \r\n              <Text\r\n              className=\"font-inter font-normal leading-[150.00%] mt-[10px] not-italic text-gray_501 text-left w-[100%]\"\r\n              variant=\"body2\"\r\n            >\r\n             {props?.timeZone}\r\n             </Text> : (\r\n           <>\r\n             <Text\r\n           className=\"font-inter font-normal leading-[150.00%] mt-[10px] not-italic text-gray_501 text-left w-[100%]\"\r\n           variant=\"body2\"\r\n         >\r\n           {isReadMore ? (\r\n             <span>\r\n               {props?.timeZone.slice(0,20)}...\r\n             </span>\r\n            ): props?.timeZone}\r\n         </Text>\r\n         <Text\r\n           className=\"font-medium md:ml-[0] ml-[67px] mt-[5px] text-gray_300 text-left w-[auto]\"\r\n           variant=\"body3\" onClick={toggleReadMore}\r\n         >\r\n           { isReadMore ? \"Read More \": \"Read Less\"}\r\n                        \r\n       </Text>\r\n           </>\r\n         )              \r\n            )}\r\n              \r\n            {/* <Text\r\n              className=\"font-inter font-medium md:ml-[0] ml-[67px] mt-[5px] text-gray_300 text-left w-[auto]\"\r\n              variant=\"body3\"\r\n            >\r\n              {props?.readmore}\r\n              \r\n            </Text> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nYourModelsTwoCategory.defaultProps = {\r\n  groupThirtyEight: \"file type\",\r\n  ecommerce: \"E-commerce\",\r\n  v10: \"v1.0\",\r\n  modelname: \"model_name\",\r\n  timeZone: \"Amet minim mollit non deserunt ullamco est sit am...\",\r\n  readmore: \"Read More\",\r\n};\r\n\r\nexport default YourModelsTwoCategory;\r\n","import React from \"react\";\r\n\r\nimport { Input } from \"components\";\r\n\r\nconst UploadModelColumninputOne = (props) => {\r\n  return (\r\n    <>\r\n      <div \r\n        className= {`${props.className} ${props?.activeInputValue == props?.name ? \"border-gray_501\": \"border-gray_801\"}`} onFocus={() => props?.updateInputValue(props?.name)}\r\n      >\r\n        <Input\r\n          wrapClassName=\"w-[100%]\"\r\n          className=\"font-inter font-light p-[0] placeholder:text-gray_801 text-[12px] text-gray_300 text-left w-[100%]\"\r\n          name={props?.name}\r\n          onChange={props?.onChangeInputsHandler}\r\n          onBlur = {props?.validateForm}\r\n          placeholder=\"Enter the version of model\"\r\n        ></Input>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nUploadModelColumninputOne.defaultProps = {};\r\n\r\nexport default UploadModelColumninputOne;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useState, useCallback } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport { Img, Text, Button, SelectBox } from \"components\";\r\nimport UploadModelColumninputOne from \"components/UploadModelColumninputOne\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '65%',\r\n  height: '75%',\r\n  bgcolor: 'blur',\r\n  boxShadow: 24,\r\n};\r\n\r\nconst UploadmodelModal = (props) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [activeInputValue, setActiveInputValue] = useState(\"\");\r\n  const [userFilledDetail, setUserFilledDetail] = useState({\r\n    description : null,\r\n    version : null,\r\n    industry : null,\r\n    uploadedModel : null\r\n  });\r\n   const [open, setOpen] = useState(true);\r\n   const [error,setError] = useState({\r\n    description : \"\",\r\n    version : \"\",\r\n    industry : \"\",\r\n    uploadedModel : \"\"\r\n   });\r\n   const [isdisabledSendButton,setIsdisabledSendButton] = useState(false);\r\n  const handleClose = () => setOpen(false);\r\n  const fileInputRef = useRef(null);\r\n  const uploadModelApi = axios.create({\r\n    baseURL: 'https://code-wizard.in/generated_app',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    timeout: 15000, \r\n       \r\n});\r\n  const industrySelectOptions = [\r\n    { value: \"Healthcare\", label: \"Healthcare\" },\r\n    { value: \"IT\", label: \"IT\" },\r\n    { value: \"Transport\", label: \"Transport\" },\r\n    { value: \"Ecommerce\", label: \"Ecommerce\" },\r\n    { value: \"Space\", label: \"Space\" },\r\n  ];\r\n  const { user } = useAuth0();\r\n  console.log(user,\"user profile\");\r\n  const uploadModel = async (modelDetail,modelFile) =>{\r\n      try{\r\n        const industryRespone = await uploadModelApi.post(`/Industries`,\r\n         {\r\n          IndustryName : modelDetail?.industry,\r\n          Icon : \"images/img_group25.svg\",\r\n        }\r\n      )\r\n      console.log(industryRespone.data);\r\n     const documentResponse =   await uploadModelApi.post(`/Documents`,modelFile,{\r\n          headers : {\r\n          \"Filetype\" : \"mdj\",\r\n          \"fileName\" : modelDetail?.uploadedModel?.name,\r\n          \"Content-Type\" : 'multipart/form-data',\r\n\r\n        },         \r\n      })\r\n      console.log(documentResponse.data);\r\n      const modelResponse = await uploadModelApi.post(`/ModelFiles`,{       \r\n          ModelType: \"StarUML\",\r\n          CreatedBy: \"Replicacia\",\r\n          ModelName: modelDetail?.uploadedModel?.name,\r\n          ModelDescription: modelDetail?.description,\r\n          Path: \"confuse\",\r\n          IconPath: \"cling\",\r\n          UserName: user?.email,\r\n          ModelFileIndustry: industryRespone.data.IndustryId,\r\n          ModelFileFile: documentResponse.data.DocId,\r\n          ModelFileName: modelDetail?.uploadedModel?.name      \r\n      })     \r\n      console.log(modelResponse.data);\r\n      props?.updateModelResponse(modelResponse.data);\r\n      }catch (e) {\r\n        console.log(e);\r\n      }\r\n  } \r\n  useEffect(() => {\r\n    console.log(error);\r\n    if(error.industry || error.description || error.version || error.uploadedModel || selectedFile === null){\r\n      setIsdisabledSendButton(true);\r\n    }\r\n    else{\r\n      setIsdisabledSendButton(false);\r\n    }\r\n  },[error,selectedFile]);\r\n  const validateForm = (e) => {\r\n    const {name, value} = e.target;\r\n    const availableIndustries = [\"Healthcare\",\"IT\",\"Transport\",\"Ecommerce\",\"Space\"];\r\n    setError((obj) => {\r\n        const curError= {...obj,[name] : \"\"};\r\n        const validNameregex = /^[a-zA-Z ]*$/;\r\n        switch(name){\r\n            case \"description\" :\r\n              if(!value){\r\n                curError[name] = \"Please enter description\"\r\n              }\r\n             break;\r\n            case \"version\" :\r\n                if(!value){\r\n                    curError[name] = \"Please enter version\"\r\n                  }\r\n                  break ;\r\n            case \"industry\" :\r\n                if(!value){\r\n                    curError[name] = \"please enter industry\"\r\n                  }else if(!availableIndustries.includes(value)){\r\n                    curError[name] = \"please enter appropriate industry name\"\r\n                  }\r\n                  else {\r\n                    const industryNameRegexTest = validNameregex.test(value);\r\n                    if(!industryNameRegexTest){\r\n                      curError[name] = \"should contain alphabets only\"\r\n                    }\r\n                  }\r\n              break; \r\n            default :\r\n              break;              \r\n           }     \r\n           console.log(error);    \r\n           return curError;\r\n    })   \r\n  }\r\n  const onChangleFileHandler = (e) => {\r\n    const file = e.target.files[0];\r\n    console.log(file.name.slice(file.name.length-4));\r\n    setUserFilledDetail((curDetail) => {\r\n      return { ...curDetail,uploadedModel : file }\r\n     })\r\n     setSelectedFile(file);\r\n     console.log(selectedFile);\r\n     console.log(props?.yourModelsList,file.name);\r\n     if(file.name.slice(file.name.length-4) !== \".mdj\"){\r\n      setError(curError => {\r\n        return{...curError,uploadedModel : \"This type of file is not allowed to upload\"}\r\n      })\r\n    }else if(props?.yourModelsList.find(elem => elem.ModelName === file.name)){\r\n      console.log(props?.yourModelsList,file.name);\r\n      setError(curError => {\r\n        return{...curError,uploadedModel : \"file is already existed\"}\r\n      })\r\n    }\r\n  };\r\n  const handleClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[acceptedFiles.length-1];\r\n    console.log(file)\r\n    setUserFilledDetail((curDetail) => {\r\n      return { ...curDetail,uploadedModel : file }\r\n     })\r\n    setSelectedFile(file);\r\n    if(file.name.slice(file.name.length-4) !== \".mdj\"){\r\n      setError(curError => {\r\n        return{...curError,uploadedModel : \"This type of file is not allowed to upload\"}\r\n      })\r\n    }else if(props?.yourModelsList.find(elem => elem.ModelName === file.name)){\r\n      console.log(props?.yourModelsList,file.name);\r\n      setError(curError => {\r\n        return{...curError,uploadedModel : \"file is already existed\"}\r\n      })\r\n    }\r\n     }, [props?.yourModelsList]);\r\n     \r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n  const updateInputValue = (name) => {\r\n    setActiveInputValue(name);\r\n  };\r\n\r\n  const onChangeInputsHandler = (e) => {\r\n    console.log(e.target.value);\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    console.log(userFilledDetail);\r\n    validateForm(e);\r\n      setUserFilledDetail((curDetail) => {\r\n        return { ...curDetail, [name]: value };\r\n      });\r\n    }\r\n  const onClickUploadHandler = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n    console.log(userFilledDetail,formData);\r\n      let submit = true;\r\n      for (const key in userFilledDetail) {\r\n        if (userFilledDetail.hasOwnProperty(key)) {\r\n          if(userFilledDetail[key] === null){\r\n            submit = false;\r\n            setError(curError => {\r\n              return{...curError,[key] : \"input should not empty\"}\r\n            })\r\n          }else{\r\n            setError(curError => {\r\n              return{...curError,[key] : \"\"}\r\n            })\r\n          }\r\n          console.log(key, userFilledDetail[key]);\r\n        }\r\n      }\r\n      if(submit){   \r\n        uploadModel(userFilledDetail,formData); \r\n        props?.updateUploadComonentToShow(false);\r\n      }\r\n  };\r\n  const closeChoosenModel = () => {\r\n    setSelectedFile(null);\r\n    setError(curError => {\r\n      return{...curError,uploadedModel : null}\r\n    })\r\n  }\r\n  const onChangeDropdownHandler = (name,value) => {\r\n    setUserFilledDetail(curDetails => {\r\n      console.log({...curDetails,[name] : value.value});        \r\n       return {...curDetails,[name] : value.value};\r\n    });\r\n    setError(curError => {\r\n      return{...curError,industry : \"\"}\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n       open={open}\r\n       onClose={handleClose}\r\n       aria-labelledby=\"modal-modal-title\"\r\n       aria-describedby=\"modal-modal-description\"\r\n      >\r\n       <Box sx={style}>\r\n      <div className=\"max-h-[97vh] overflow-y-auto sm:w-[100%] md:w-[100%] w-[100%]\">\r\n        <div className=\"bg-gray_901 flex items-center justify-start max-w-[960px] mx-[auto] my-[8px] p-[48px] md:px-[20px] w-[100%]\">\r\n          <div className=\"flex flex-col gap-[40px] items-center justify-start w-[100%]\">\r\n            <div className=\"flex md:flex-col flex-row gap-[24px] items-center justify-between w-[100%]\">\r\n              <div className=\"border-[3px] border-gray_801 border-dashed flex md:flex-1 flex-col gap-[24px] items-center justify-start p-[36px] sm:px-[20px] rounded-[4px] md:w-[100%] w-[49%]\">\r\n                {selectedFile === null || selectedFile === {} ? (\r\n                  <>\r\n                    <div\r\n                      {...getRootProps()}\r\n                      className={`${isDragActive ? \"border-teal_A400\" : \"border-gray_801\"} text-center p-[12px] border-[3px] border-dashed  h-[5rem] sm:px-[20px] font-semibold text-gray_300`}\r\n                    >\r\n                      <input {...getInputProps()} />\r\n                      {isDragActive ? (\r\n                        <p className=\"w-[20rem] h-[100%] text-center text-gray_300 p-[5]\">\r\n                          Drop the files here ...\r\n                        </p>\r\n                      ) : (\r\n                        <p className=\"font-semibold text-gray_300 h-[100%] sm:w-[100%]\">\r\n                          Drag and drop files to upload your model library\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".mdj\"\r\n                      className={`(\"block w-full text-sm text-slate-500 invisible h-[0] file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-[1] file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700hover:file:bg-violet-100\")}}\r\n                             `}\r\n                      ref={fileInputRef}\r\n                      onChange={onChangleFileHandler}\r\n                    />\r\n                    <button\r\n                      onClick={handleClick}\r\n                      className=\"border-[2px] border-solid border-teal_A400 cursor-pointer font-medium text-teal_A400 mt-[32px] px-[12px] py-[16px] rounded-[4px] text-[16px] text-center sm:w-[100%] w-[100%]\"\r\n                    >\r\n                      Browse From Your Device\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <div className=\"h-[195px] relative w-[52%]\">\r\n                    <div className=\"absolute bottom-[0] flex h-[183px] md:h-[195px] inset-x-[0] justify-end mx-[auto] w-[100%]\">\r\n                      <div className=\"bg-gray_902 h-[195px] mt-[auto] mx-[auto] rounded-[4px] w-[100%]\"></div>\r\n                      <div className=\"absolute bottom-[5%] flex flex-col gap-[19px] inset-x-[0] items-center justify-start mx-[auto] w-[78%]\">\r\n                        <div\r\n                          className=\"bg-cover bg-no-repeat flex h-[96px] items-center justify-end p-[12px] md:w-[100%] w-[56%]\"\r\n                          style={{\r\n                            backgroundImage: \"url('images/img_group25.svg')\",\r\n                          }}\r\n                        >\r\n                          {/* <Img\r\n                            src=\"images/img_close_red_400.svg\"\r\n                            className=\"h-[34px] mt-[38px] rounded-[50%] w-[34px]\"\r\n                            alt=\"close\"\r\n                          /> */}\r\n                        </div>\r\n                        <div className=\"flex flex-col gap-[5px] items-start justify-start w-[100%]\">\r\n                          <Text\r\n                            className=\"font-normal not-italic text-gray_50 text-left w-[auto]\"\r\n                            variant=\"body2\"\r\n                          >\r\n                            {selectedFile.name}\r\n                          </Text>\r\n                          <Text\r\n                            className=\"font-light text-gray_501 text-left w-[auto]\"\r\n                            variant=\"body3\"\r\n                          >\r\n                            {selectedFile.size}\r\n                          </Text>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <Img\r\n                      src=\"images/img_close_gray_801.svg\"\r\n                      className=\"common-pointer absolute h-[24px] right-[0] rounded-[6px] top-[0] w-[auto]\"\r\n                      onClick={closeChoosenModel}\r\n                      alt=\"close_One\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n               {error.uploadedModel && <Text\r\n                    className=\"font-normal mb-[11px] not-italic text-center text-red_400 w-[auto]\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    {error.uploadedModel}\r\n                  </Text>}\r\n              </div>\r\n              <div className=\"flex md:flex-1 flex-col gap-[20px] items-center justify-start md:w-[100%] w-[49%]\">\r\n                <div className=\"flex flex-col gap-[20px] items-center justify-start w-[100%]\">\r\n                  <div className=\"flex flex-col gap-[8px] items-start justify-start self-stretch sm:w-[100%] w-[auto] relative\">\r\n                    <Text\r\n                      className=\"font-semibold text-gray_300 text-left w-[auto] after:content-['*'] after:ml-0.5 after:text-red-500\"\r\n                      variant=\"body2\"\r\n                    >\r\n                      <label for=\"message\">Description</label>\r\n                    </Text>\r\n                    <textarea\r\n                      id=\"message\"\r\n                      rows=\"4\"\r\n                      className={`${error.description ? \"!border-red_400\": \"border-gray_801\"} block p-2.5 w-full text-sm text-gray_300 bg-gray_902 rounded-lg border-[1px] solid focus:border-gray_501 !font-inter !font-light p-[0] placeholder:text-gray_801 !text-[12px]`}\r\n                      placeholder=\"Enter description of this model...\"\r\n                      onChange={onChangeInputsHandler}\r\n                      onBlur={validateForm}\r\n                      name=\"description\"\r\n                    />\r\n                    {/* <UploadModelColumnenterapplicatioOne className=\"bg-gray_902 border-[1px] border-gray_801 border-solid flex flex-col h-[96px] md:h-[auto] items-start justify-start px-[12px] py-[15px] rounded-[4px] sm:w-[100%] w-[420px]\" /> */}\r\n                    {error.description && \r\n                   <Text\r\n                      className=\"font-normal not-italic text-left text-red_400 w-[auto] absolute bottom-[-18px] left-[5px]\"\r\n                      variant=\"body3\"\r\n                    >\r\n                      {error.description}\r\n                    </Text>\r\n                 }\r\n                  </div>\r\n                  <div className=\"flex flex-col gap-[8px] items-start justify-start self-stretch sm:w-[100%] w-[auto] relative\">\r\n                    <Text\r\n                      className=\"font-semibold text-gray_300 text-left w-[auto] after:content-['*'] after:ml-0.5 after:text-red-500\"\r\n                      variant=\"body2\"\r\n                    >\r\n                      Version\r\n                    </Text>\r\n                    <UploadModelColumninputOne\r\n                      className={`${error.version ? \"!border-red_400 color-pink_900\" : \"\"}bg-gray_902 border-[1px] border-solid flex flex-col items-start justify-start px-[12px] py-[15px] rounded-[4px] sm:w-[100%] w-[100%] focus:border-gray_501`}\r\n                      updateInputValue={updateInputValue}\r\n                      activeInputValue={activeInputValue}\r\n                      onChangeInputsHandler={onChangeInputsHandler}\r\n                      name=\"version\"\r\n                      validateForm={validateForm}\r\n                    />\r\n                   {error.version && \r\n                    <Text\r\n                      className=\"font-normal not-italic text-left text-red_400 w-[auto] absolute bottom-[-18px] left-[5px]\"\r\n                      variant=\"body3\"\r\n                    >\r\n                      {error.version}\r\n                    </Text>\r\n                   }\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex flex-col gap-[8px] items-start justify-start self-stretch sm:w-[100%] w-[auto] relative\">\r\n                  <Text\r\n                    className=\"font-semibold text-gray_300 text-left w-[auto] after:content-['*'] after:ml-0.5 after:text-red-500\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    Industry\r\n                  </Text>\r\n                  {/* <UploadModelColumninputOne className=\"bg-gray_902 border-[1px] border-gray_801 border-solid flex flex-col items-start justify-start px-[12px] py-[15px] rounded-[4px] sm:w-[100%] w-[420px] \" /> */}\r\n                  {/* <UploadModelColumninputOne\r\n                    className={`${error.industry ? \"!border-pink_900 color-pink_900\" : \"\"}bg-gray_902 border-[1px] border-solid flex flex-col items-start justify-start px-[12px] py-[15px] rounded-[4px] sm:w-[100%] w-[420px] focus:border-gray_501`}\r\n                    updateInputValue={updateInputValue}\r\n                    activeInputValue={activeInputValue}\r\n                    onChangeInputsHandler={onChangeInputsHandler}\r\n                    name=\"industry\"\r\n                  /> */}\r\n                   <SelectBox\r\n                  className=\"bg-gray_902 border-[1px] border-solid font-normal not-italic px-[12px] py-[10px] rounded-[4px] text-[12px] text-gray_300 text-left w-[100%]\"\r\n                  placeholderClassName=\"text-gray_300\"\r\n                  name=\"industry\"\r\n                  placeholder=\"Select Industry\"\r\n                  isSearchable={true}\r\n                  isMulti={false}\r\n                  options = {industrySelectOptions}\r\n                  updateInputValue={updateInputValue}\r\n                  activeInputValue={activeInputValue}\r\n                  onChange ={onChangeDropdownHandler}\r\n                  \r\n                  indicator={\r\n                    <Img\r\n                      src=\"images/img_arrowdown_gray_50_24x24.svg\"\r\n                      className=\"h-[24px] w-[24px]\"\r\n                      alt=\"arrow_down\"\r\n                    />\r\n                  }\r\n                ></SelectBox>\r\n                  {error.industry && \r\n                   <Text\r\n                      className=\"font-normal not-italic text-left text-red_400 w-[auto] absolute bottom-[-18px] left-[5px]\"\r\n                      variant=\"body3\"\r\n                    >\r\n                      {error.industry}\r\n                    </Text>\r\n                 }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-row gap-[26px] items-center justify-center md:w-[100%] w-[41%]\">\r\n              <Button onClick={() => props?.updateUploadComonentToShow(false)} className=\"border-[1px] border-solid border-teal_A400 cursor-pointer font-medium sm:px-[20px] md:px-[40px] px-[64px] py-[10px] rounded-[4px] text-[14px] text-center text-teal_A400 w-[161px]\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={!isdisabledSendButton ? onClickUploadHandler : null}\r\n                className={`${!isdisabledSendButton ? \"bg-gradient\" : \"bg-teal_900\"}  cursor-pointer font-medium sm:px-[20px] md:px-[40px] px-[64px] py-[10px] rounded-[4px] text-[14px] text-center text-gray_900 w-[161px]`}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadmodelModal;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { Text, Line, Button, Input, Img, List } from \"components\";\r\nimport { CloseSVG } from \"../../assets/images\";\r\nimport ModelLibraryCategory from \"components/ModelLibraryCategory\";\r\nimport YourModelsTwoCategory from \"components/YourModelsTwoCategory\";\r\nimport UploadmodelModal from \"modals/Uploadmodel\";\r\nimport { SET_MODEL_DETAIL } from \"store/slices/fullstack.slice\";\r\nimport { SET_BACKEND_MODEL_DETAIL } from \"store/slices/backend.slice\";\r\nimport { SET_FRONTEND_MODEL_DETAIL } from \"store/slices/frontend.slice\";\r\nimport { makeApiRequest } from \"services/Api/api\";\r\n\r\nconst SelectModelCommonPage = ({path,selected_model}) => {\r\n  const [inputvalue, setInputvalue] = React.useState(\"\");\r\n  const [modelListToShow,setModelListToShow] = useState([]);\r\n  const [selectedModelName, setSelectedModelName] = useState(selected_model);\r\n  const [toggleModel, setToggleModel] = useState(false);\r\n  const [uploadComponentToShow,SetUploadComponentToShow] = useState(false);\r\n  const [yourModelsList,setYourModelList] = useState([]);\r\n  const[uploadedModelResponse,setUploadedModelResponse] = useState({});\r\n   const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { user } = useAuth0();\r\n  console.log(selected_model,\"fe model\");\r\n  console.log(selectedModelName,\"useState\");\r\n\r\n  const project_type = useSelector(store => store.basicInformation.projectType);\r\n  console.log(project_type);\r\n  const ExistingModelList = [\r\n    { modalType: \"Product Catalog\", imgUrl: \"images/img_report.svg\" },\r\n    { modalType: \"Online Teacher\", imgUrl: \"images/img_cut.svg\" },\r\n    {\r\n      modalType: \"User Management\",\r\n      imgUrl: \"images/img_download_teal_a400.svg\",\r\n    },\r\n    { modalType: \"E-commerce\", imgUrl: \"images/img_computer_gray_50.svg\" },\r\n    { modalType: \"Customer Accounts\", imgUrl: \"images/img_group52991.svg\" },\r\n    { modalType: \"Customers and Payments\", imgUrl: \"images/img_car.svg\" },\r\n    { modalType: \"Traveler Trips\", imgUrl: \"images/img_car_gray_50.svg\" },\r\n    { modalType: \"Student Assignments\", imgUrl: \"images/img_assignment.svg\" },\r\n  ];\r\n  useEffect(_ => {\r\n    const filteredList = ExistingModelList.filter(singleModel => {\r\n      const modelTypeInLowerCase = singleModel.modalType.toLowerCase();\r\n        if(modelTypeInLowerCase.startsWith(inputvalue.toLowerCase()))\r\n           return true;\r\n        if(modelTypeInLowerCase.includes(inputvalue))\r\n           return true;\r\n         return false;\r\n    });\r\n    setModelListToShow(filteredList);\r\n    },[inputvalue]);\r\n    useEffect(() => {\r\n      ( async _ => {\r\n        const userModelList = await makeApiRequest('GET',`/ModelFiles?$filter=UserName eq '${user.email}'`)\r\n        console.log(userModelList);\r\n        setYourModelList(userModelList.value);\r\n      })()\r\n    },[uploadedModelResponse, user.email]);\r\n  const onClickYourModelsHandler = () => {\r\n    setToggleModel(true);\r\n    // setSelectedModelName(\"\");\r\n  };\r\n  const SelectedModelHandler = () => {\r\n    if(project_type === 'Front End')\r\n    dispatch(SET_FRONTEND_MODEL_DETAIL(selectedModelName));\r\n    else if(project_type === 'Back End')\r\n    dispatch(SET_BACKEND_MODEL_DETAIL(selectedModelName));\r\n    else\r\n    dispatch(SET_MODEL_DETAIL(selectedModelName));\r\n    navigate(path);\r\n  };\r\n  const updateSelectedModel = (singleModel) => {\r\n    console.log('singleModel', singleModel); \r\n    setSelectedModelName(singleModel);  \r\n  };\r\n\r\n  const updateUploadComonentToShow = (value) => {\r\n    // console.log(value,\"upload model called\")\r\n     SetUploadComponentToShow(value);\r\n  }\r\n\r\n const updateYoursModelList = (list) => {\r\n    setYourModelList(list);\r\n    console.log(list,\"list from upload model\");\r\n    console.log(yourModelsList,\"list from state\");\r\n }\r\n const updateModelResponse = (detail) => {\r\n    setUploadedModelResponse(detail);\r\n }\r\n const deleteModelFromBackend = async id => {\r\n    const deleteModel = await makeApiRequest('DELETE',`/ModelFiles(${id})`)\r\n    console.log(deleteModel);\r\n    const userModelList = await makeApiRequest('GET',`/ModelFiles?$filter=UserName eq '${user.email}'`);\r\n    console.log(userModelList);\r\n      setYourModelList(userModelList.value);\r\n  }\r\n const downloadSelectedModel = async () => {\r\n console.log(selectedModelName);\r\n  const file = await makeApiRequest('GEt',`/Documents(${selectedModelName?.ModelFileFile})/$value`);\r\n  console.log(file)\r\n  const blob = new Blob([file], { type: 'text/plain;charset=utf-8' });\r\n  saveAs(blob, selectedModelName?.ModelFileName);\r\n }\r\n \r\n  return (\r\n    <>   \r\n         { uploadComponentToShow && (\r\n           <UploadmodelModal updateUploadComonentToShow={updateUploadComonentToShow} updateYoursModelList={updateYoursModelList} updateModelResponse={updateModelResponse} yourModelsList={yourModelsList}/>\r\n         )} \r\n           <div className=\"flex flex-1 flex-col gap-[40px] items-center justify-start w-[100%] pt-[32px]\">\r\n           <div className=\"flex flex-col items-center justify-start w-[100%]\">\r\n             <div className=\"flex items-start justify-start max-w-[982px] w-[100%]\">\r\n               <div className=\"flex flex-col gap-[20px] items-start justify-start w-[100%]\">\r\n                 <div className=\"flex items-start justify-start w-[100%]\">\r\n                   <div className=\"flex flex-col gap-[4px] items-start justify-start w-[100%]\">\r\n                     <Text\r\n                       className=\"font-medium text-gray_50 text-left w-[auto]\"\r\n                       as=\"h4\"\r\n                       variant=\"h4\"\r\n                     >\r\n                       Select A Model\r\n                     </Text>\r\n                     <Text\r\n                       className=\"font-normal not-italic text-gray_501 text-left w-[auto]\"\r\n                       as=\"h6\"\r\n                       variant=\"h6\"\r\n                     >\r\n                       Choose Models from the existing library or add your own\r\n                     </Text>\r\n                   </div>\r\n                 </div>\r\n                 <Line className=\"bg-gray_801 h-[1px] w-[100%]\" />\r\n               </div>\r\n             </div>\r\n             <div className=\"flex md:flex-col flex-row md:gap-[40px] items-center justify-between mt-[32px] w-[100%]\">\r\n               <div className=\"border-[1px] border-gray_801 border-solid flex flex-row gap-[8px] items-center justify-start p-[6px] rounded-[4px] self-stretch w-[auto]\">\r\n                 <Button\r\n                   onClick={() => setToggleModel(false)}\r\n                   className={`${\r\n                     !toggleModel\r\n                       ? \"bg-gray_300 text-gray_900\"\r\n                       : \"text-gray_50\"\r\n                   } cursor-pointer font-medium min-w-[149px] px-[14px] py-[10px] rounded-[2px] text-[16px] text-center w-[auto]`}\r\n                 >\r\n                   Existing Models\r\n                 </Button>\r\n                 <Button\r\n                   onClick={onClickYourModelsHandler}\r\n                   className={`${\r\n                     toggleModel ? \"bg-gray_300 text-gray_900\" : \"text-gray_50\"\r\n                   } cursor-pointer font-medium min-w-[149px] px-[14px] py-[10px] rounded-[2px] text-[16px] text-center w-[auto]`}\r\n                 >\r\n                   Your Models\r\n                 </Button>\r\n               </div>\r\n               <div className=\"flex sm:flex-1 sm:flex-col flex-row gap-[16px] items-start justify-end self-stretch sm:w-[100%] w-[auto]\">\r\n                 <Input\r\n                   value={inputvalue}\r\n                   onChange={(e) => setInputvalue(e?.target?.value)}\r\n                   wrapClassName={`bg-gray_902 border-[1px] border-gray_801 border-solid flex p-[13px] rounded-[4px] sm:w-[100%] ${toggleModel ? \"w-[73%]\" : \"w-[100%]\"}`}\r\n                   className=\"font-medium p-[0] placeholder:text-gray_801 text-[14px] text-gray_50 text-left w-[100%]\"\r\n                   name=\"searchbox\"\r\n                   placeholder=\"Search Models\"\r\n                   suffix={\r\n                     inputvalue?.length > 0 ? (\r\n                       <>\r\n                         <CloseSVG\r\n                           className=\"cursor-pointer ml-[35px] my-[auto]\"\r\n                           onClick={() => setInputvalue(\"\")}\r\n                           color=\"#4e4e4e\"\r\n                         />\r\n                       </>\r\n                     ) : (\r\n                       <Img\r\n                         src=\"images/img_search.svg\"\r\n                         className=\"cursor-pointer ml-[35px] my-[auto]\"\r\n                         alt=\"search\"\r\n                       />\r\n                     )\r\n                   }\r\n                 ></Input>\r\n                 {toggleModel ? (\r\n                   <Button\r\n                   className=\"bg-teal_A400 cursor-pointer flex items-center justify-center min-w-[217px] px-[20px] py-[16px] rounded-[4px] w-[auto]\"\r\n                   leftIcon={\r\n                     <Img\r\n                       src=\"images/img_plus_gray_900.svg\"\r\n                       className=\"mr-[8px]\"\r\n                       alt=\"plus\"\r\n                     />\r\n                   }\r\n                   onClick = {() => updateUploadComonentToShow(true)}\r\n                 >\r\n                   <div className=\"font-medium text-[16px] text-gray_900 text-left\">\r\n                     Upload New Model\r\n                   </div>\r\n                 </Button>\r\n                 ) : (\r\n                  null\r\n                 ) }\r\n                \r\n               </div>\r\n             </div>\r\n             {/* conditional rendering b/w existing models list and your models list*/}\r\n             {!toggleModel ? (\r\n               <div className=\"md:gap-[20px] gap-[24px] grid sm:grid-cols-1 md:grid-cols-2 grid-cols-4 justify-center mt-[24px] h-[400px] px-[14px] overflow-y-auto w-[100%]\">\r\n                 {modelListToShow.map((singleModel, idx) => {\r\n                   return (\r\n                     <ModelLibraryCategory\r\n                       className=\"cursor-pointer flex flex-1 flex-col h-[160px] items-center justify-center p-[14px] sm:px-[20px] md:px-[40px] rounded-[8px] w-[100%]\"\r\n                       productcatalog={singleModel}\r\n                       imgUrl={singleModel.imgUrl}\r\n                       updateSelectedModel={updateSelectedModel}\r\n                       selectedModelName={selectedModelName}\r\n                       key={idx}\r\n                     />\r\n                   );\r\n                 })}\r\n               </div>\r\n             ) : (\r\n               /*created a extra div to wrap the yourModels list on below */\r\n               <div className=\"flex w-[100%] h-[400px] overflow-y-auto mt-[24px] px-[14px]\">\r\n                 <List\r\n                   className=\"sm:flex-col flex-row gap-[24px] grid sm:grid-cols-1 grid-cols-4 w-[100%] h-[150px]\"\r\n                   orientation=\"horizontal\"\r\n                 >  \r\n                   {yourModelsList.map((model,idx) => {\r\n                     return(\r\n                      <YourModelsTwoCategory\r\n                      className=\"cursor-pointer border-[2px] border-solid flex flex-col items-center justify-start p-[16px] rounded-[8px] w-[100%]\"\r\n                      groupThirtyEight=\"file type\"\r\n                      ecommerce={model?.Industry}\r\n                      v10=\"v1.0\"\r\n                      modelname={model?.ModelName}\r\n                      timeZone={model?.ModelDescription}\r\n                      readmore=\"Read More\"\r\n                      updateSelectedModel={updateSelectedModel}\r\n                      selectedModelName={selectedModelName}\r\n                      deleteModelFromBackend={deleteModelFromBackend}\r\n                      model={model}\r\n                      key= {idx}\r\n                    />\r\n                     )\r\n                   })}       \r\n                </List>\r\n               </div>\r\n             )}\r\n           </div>\r\n           <div className=\"flex flex-col gap-[16px] items-start justify-start max-w-[982px] w-[100%]\">\r\n             <Line className=\"bg-gray_801 h-[1px] w-[100%]\" />\r\n             <div className=\"flex h-[41px] md:h-[auto] items-start justify-between w-[100%]\">\r\n               <div className=\"flex flex-row gap-[12px] items-center justify-between w-[100%]\">\r\n                 <div className=\"flex flex-1 md:flex-1 flex-row gap-[8px] items-start justify-start self-stretch md:w-[100%] w-[auto]\">\r\n                   {selectedModelName ? (\r\n                     <>\r\n                       <Img\r\n                         src=\"images/img_download_teal_a400.svg\"\r\n                         className=\"h-[24px] w-[24px]\"\r\n                         alt=\"download\"\r\n                       />\r\n                       <Text\r\n                         className=\"cursor-pointer font-medium text-left text-teal_A400 w-[auto]\"\r\n                         as=\"h6\"\r\n                         variant=\"h6\"\r\n                         onClick={downloadSelectedModel}\r\n                       >\r\n                         Download Model\r\n                       </Text>\r\n                     </>\r\n                   ) : (\r\n                     false\r\n                   )}\r\n                 </div>\r\n                 <Button\r\n                   onClick={selectedModelName ? SelectedModelHandler : null}\r\n                   className={`${\r\n                     selectedModelName ? \"bg-gradient\" : \"bg-teal_900\"\r\n                   } cursor-pointer font-medium sm:px-[20px] md:px-[40px] px-[64px] py-[10px] rounded-[4px] text-[14px] text-center text-gray_900 w-[161px]`}\r\n                 >\r\n                   Next\r\n                 </Button>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n         \r\n    </>\r\n  );\r\n};\r\nSelectModelCommonPage.defaultProps = {\r\n  path: \"/frontend-select-techstack\",\r\n  selected_model:\"\", \r\n};\r\n\r\nexport default SelectModelCommonPage;\r\n","import axios from \"axios\";\r\n\r\n// axios.defaults.headers.common['Content-Type'] = 'application/json';\r\n// 'http://54.166.30.141:8081\r\nconst baseUrl = 'https://code-wizard.in/generated_app';\r\n\r\nexport const makeApiRequest = async (method, url, data = null) => {\r\n  try {\r\n    const response = await axios({\r\n      method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      url: `${baseUrl}${url}`,\r\n      data,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('API request error:', error);\r\n    // throw error;\r\n  }\r\n};"],"names":["CloseSVG","_ref","_ref$fillColor","fillColor","_ref$className","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","fill","xmlns","viewBox","width","height","children","d","ModelLibraryCategory","_props$selectedModelN","_props$productcatalog","_props$productcatalog2","_Fragment","_jsxs","onClick","updateSelectedModel","productcatalog","concat","selectedModelName","modalType","Img","src","imgUrl","alt","Text","as","variant","key","defaultProps","YourModelsTwoCategory","_useState","useState","_useState2","_slicedToArray","isReadMore","setIsReadMore","model","ModelName","modelname","_props$model","deleteModelFromBackend","ModelId","groupThirtyEight","Button","ecommerce","v10","timeZone","split","length","slice","readmore","UploadModelColumninputOne","activeInputValue","name","onFocus","updateInputValue","Input","wrapClassName","onChange","onChangeInputsHandler","onBlur","validateForm","placeholder","style","position","top","left","transform","bgcolor","boxShadow","selectedFile","setSelectedFile","_useState3","_useState4","setActiveInputValue","_useState5","description","version","industry","uploadedModel","_useState6","userFilledDetail","setUserFilledDetail","_useState7","_useState8","open","setOpen","_useState9","_useState10","error","setError","_useState11","_useState12","isdisabledSendButton","setIsdisabledSendButton","fileInputRef","useRef","uploadModelApi","axios","baseURL","headers","timeout","user","useAuth0","console","log","uploadModel","_asyncToGenerator","_regeneratorRuntime","mark","_callee","modelDetail","modelFile","_modelDetail$uploaded","_modelDetail$uploaded2","_modelDetail$uploaded3","industryRespone","documentResponse","modelResponse","wrap","_context","prev","next","post","IndustryName","Icon","sent","data","ModelType","CreatedBy","ModelDescription","Path","IconPath","UserName","email","ModelFileIndustry","IndustryId","ModelFileFile","DocId","ModelFileName","updateModelResponse","t0","stop","_x","_x2","apply","arguments","useEffect","e","_e$target","target","value","availableIndustries","obj","curError","_defineProperty","includes","test","onDrop","useCallback","acceptedFiles","file","curDetail","yourModelsList","find","elem","_useDropzone","useDropzone","getRootProps","getInputProps","isDragActive","Modal","onClose","Box","sx","type","accept","ref","files","current","click","backgroundImage","size","for","id","rows","SelectBox","placeholderClassName","isSearchable","isMulti","options","label","curDetails","indicator","updateUploadComonentToShow","formData","FormData","append","submit","_loop","hasOwnProperty","SelectModelCommonPage","path","selected_model","_React$useState","React","_React$useState2","inputvalue","setInputvalue","modelListToShow","setModelListToShow","setSelectedModelName","toggleModel","setToggleModel","uploadComponentToShow","SetUploadComponentToShow","setYourModelList","uploadedModelResponse","setUploadedModelResponse","navigate","useNavigate","dispatch","useDispatch","project_type","useSelector","store","basicInformation","projectType","ExistingModelList","_","filteredList","filter","singleModel","modelTypeInLowerCase","toLowerCase","startsWith","_ref2","userModelList","makeApiRequest","_ref3","_callee2","deleteModel","_context2","downloadSelectedModel","_ref4","_callee3","blob","_context3","Blob","saveAs","UploadmodelModal","updateYoursModelList","list","detail","Line","suffix","color","leftIcon","List","orientation","map","idx","Industry","SET_FRONTEND_MODEL_DETAIL","SET_BACKEND_MODEL_DETAIL","SET_MODEL_DETAIL","method","url","response","_args","undefined","abrupt"],"sourceRoot":""}