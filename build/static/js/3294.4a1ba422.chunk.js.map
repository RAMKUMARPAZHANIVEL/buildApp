{"version":3,"file":"static/js/3294.4a1ba422.chunk.js","mappings":"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","sources":["components/ButtonNew/index.js","modals/FETemplateselected/index.jsx","components/FEScreen/index.jsx","components/FETemplateButton/index.jsx","services/Api/api.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ButtonNew = ({ children, onClick, isActive, isSubmit }) => {\r\n  const button = \"cursor-pointer font-medium px-4 py-2 rounded-md text-sm w-40\"\r\n  const activeButton = `${button} bg-gradient`;\r\n  const inActiveButton = `${button} bg-teal_900`;\r\n  const previousButton = `${button} text-teal_400 !py-1.6 text-[#17FFA6] border-[2px] border-[#17FFA6] bg-gray_900`;\r\n  return (\r\n    <button \r\n    className={isSubmit ? (isActive ? activeButton : inActiveButton) : previousButton} \r\n    onClick={(event) => {\r\n      onClick()}}>\r\n      {children} \r\n    </button>\r\n  );\r\n};\r\n\r\nButtonNew.defaultProps = { isActive: false };\r\n\r\nexport default ButtonNew;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Text, Img} from \"components\";\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '65%',\r\n  height: '75%',\r\n  bgcolor: 'blur',\r\n  boxShadow: 24,\r\n};\r\n\r\nconst FETemplateselectedModal = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={props?.feSelectedScreenToRender}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n        <div className=\"max-h-[97vh] overflow-y-auto sm:w-[100%] md:w-[100%]\">\r\n          <div className=\"min-h-[70vh] bg-gray_901 flex items-start justify-start max-w-[960px] mx-[auto] pt-[16px] px-[16px] md:px-[20px] w-[100%]\">\r\n            <div className=\"flex flex-col items-start justify-start md:w-[100%] w-[93%]\">\r\n              <div className=\"flex md:flex-col flex-row md:gap-[20px] items-start justify-between w-[100%]\">\r\n                <div className='flex'>\r\n                <Text\r\n                  className=\"font-medium md:mt-[0] text-gray_50 text-left w-[auto]\"\r\n                  as=\"h3\"\r\n                  variant=\"h3\"\r\n                >\r\n                  Selected Screens\r\n                </Text>\r\n                <Text\r\n                  className=\"font-normal md:ml-[0] ml-[3px] md:mt-[0] mt-[7px] not-italic text-gray_501 text-left w-[auto]\"\r\n                  variant=\"body2\"\r\n                >\r\n                  ({props?.addedList.length})\r\n                </Text>\r\n                </div>\r\n                <div className='flex'>\r\n                <Button \r\n                 onClick = {props?.deleteAllScreen}\r\n                 className=\"border-[1px] border-solid border-teal_A400 cursor-pointer font-medium min-w-[162px] md:ml-[0] ml-[391px] md:mt-[0] mt-[22px] sm:px-[20px] px-[24px] py-[8px] rounded-[4px] text-[12px] text-center text-teal_A400 w-[auto]\">\r\n                  Remove All Screens\r\n                </Button>\r\n                <Img\r\n                  src=\"images/img_close.svg\"\r\n                  className=\"common-pointer md:ml-[0] rounded-[50%] w-[24px]\"\r\n                  onClick={props.onRequestClose}\r\n                  alt=\"close\"\r\n                />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex md:flex-1 items-center justify-start md:mt-[0] mt-[24px] md:w-[100%] w-[100%] \">\r\n            <div className=\"sm:gap-[20px] gap-[24px] grid sm:grid-cols-1 grid-cols-4 justify-center min-h-[auto] w-[100%] \">\r\n              {props?.addedList.map((item, index) => {\r\n                return (\r\n                  <>\r\n                    <div className=\"flex flex-col items-center w-[100%]\">\r\n                      <div\r\n                        className={\r\n                          props?.addedList?.find(elem => elem?.FeScreenId === item?.FeScreenId)  ||\r\n                          props?.selectedScreen.FeScreenId === item?.FeScreenId\r\n                          ? \"bg-gray_901 flex items-center justify-center h-[108px] relative rounded-[4px] w-[175px]\"\r\n                          : \"bg-gray_901 flex h-[108px] items-center justify-start p-[8px] rounded-[4px] w-[175px]\"\r\n                        }\r\n                        key={index}\r\n                      >\r\n                        <Img\r\n                          src={`data:image/jpeg;base64,${item?.FrontendScreenScreenshotSmall}`}\r\n                          className=\"h-[91px] m-[auto] object-cover rounded-[4px] w-[92%]\"\r\n                          alt=\"imageSixtyTwo_Two\"\r\n                        />\r\n                        \r\n                        {props?.addedList?.find(elem => elem?.FeScreenId === item?.FeScreenId)  ? (\r\n                          <div className=\"absolute bg-gray_900_66 flex h-[100%] inset-[0] items-center justify-center m-[auto] p-[44px] sm:px-[20px] md:px-[40px] rounded-[4px] w-[181px]\">\r\n                            <Img\r\n                              src=\"images/img_close_teal_a400.svg\"\r\n                              className=\"cursor-pointer h-[32px] w-[32px]\"\r\n                              alt=\"close\"\r\n                              onClick={() =>\r\n                                props?.removeScreenFromList(item)\r\n                              }\r\n                            />\r\n                          </div>)\r\n                         : (\r\n                          false\r\n                        )}\r\n                      </div>\r\n                      <Text\r\n                        className=\"font-normal not-italic text-gray_300 text-left w-[auto]\"\r\n                        as=\"h5\"\r\n                        variant=\"h5\"\r\n                      >\r\n                        {item.ScreenName}\r\n                      </Text>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FETemplateselectedModal;\r\n","import React, { useState,useEffect } from \"react\";\r\n\r\nimport { Text, Line, Img, Button } from \"components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_FETEMPLATES } from \"store/slices/fullstack.slice\";\r\nimport FETemplateButton from \"components/FETemplateButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ButtonNew from \"components/ButtonNew\";\r\nimport { ADD_FRONTEND_FETEMPLATES } from \"store/slices/frontend.slice\";\r\nimport FETemplateselectedModal from \"modals/FETemplateselected\";\r\nimport { makeApiRequest } from \"services/Api/api\";\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport { SET_FRONTEND_APP_THEMENAME } from \"store/slices/frontend.slice\";\r\n\r\nconst FEScreen = ({path,selected_feTemplates}) => {\r\n  const [selectedScreen, setSelectedScreen] = useState(\"\");\r\n  const[feSelectedScreenToRender,SetFeSelectedScreenToRender] = useState(false);\r\n  const[feSelectedScreens,setFeSelectedScreens] = useState(selected_feTemplates);\r\n  const[feActualScreenList,setFeActualScreenList] = useState([]);\r\n  const [feScreenList,setFescreenList] = useState([]);\r\n  const [UITemplateList,setUiTemplateList] = useState([]);\r\n  const [SelectedUITemplate,SetSelectedUITemplate] = useState({});\r\n  const [feSelectedPreviewScreens,setFeSelectedPreviewScreens] = useState([])\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const project_type = useSelector(store => store.basicInformation.projectType);\r\n  const selected_FeTechnology = useSelector(store => store.frontend.frontend_details?.feTeckstack);\r\n\r\n  useEffect(() => {\r\n    ( async _ => {\r\n      const uiTemplates = await makeApiRequest('GET',`/UITemplates?$filter=UITemplateMainTechnology eq ${selected_FeTechnology?.FeTechId}`);\r\n       setUiTemplateList(uiTemplates?.value);      \r\n    })()\r\n  },[])\r\n  useEffect(() => {\r\n     ( async _ => {\r\n     if(SelectedUITemplate){\r\n      const screenListRes = await makeApiRequest('GET',`/UITemplates(${SelectedUITemplate.TemplateId})?$expand=AllScreens`);\r\n      setFeActualScreenList(screenListRes?.AllScreens);  \r\n      console.log(screenListRes.AllScreens);\r\n      let screenList = cloneDeep(screenListRes?.AllScreens);\r\n     const extractedList = await Promise.all(\r\n      screenList.map( async (screen) => {\r\n                const addedItem = screen;\r\n                if(screen?.FrontendScreenScreenshotSmall != null){\r\n                const smallImage = await makeApiRequest(\"GET\",`/Documents(${screen?.FrontendScreenScreenshotSmall})/$value`);\r\n                const finVal = smallImage.split('\\n');\r\n                addedItem.FrontendScreenScreenshotSmall = finVal[3];\r\n                }\r\n                if(screen?.FrontendScreenScreenshotBig != null){\r\n                const bigImage = await makeApiRequest(\"GET\",`/Documents(${screen?.FrontendScreenScreenshotBig})/$value`);\r\n                const finVal = bigImage.split('\\n');\r\n                addedItem.FrontendScreenScreenshotBig = finVal[3];\r\n                }\r\n                console.log(addedItem);\r\n                return addedItem;\r\n               })\r\n           )\r\n               console.log( extractedList);\r\n               setFescreenList(extractedList);          }\r\n     })()\r\n  },[SelectedUITemplate])\r\n  const addToSelectedScreen = (screen) => {\r\n    const screenToAdd = feActualScreenList.find(elem => elem?.FeScreenId === screen?.FeScreenId);\r\n       setFeSelectedScreens((curList) => {\r\n        return [...curList, screenToAdd];\r\n    });\r\n    setFeSelectedPreviewScreens((curList) => {\r\n      return [...curList, screen];\r\n    })\r\n  };\r\n  const removeScreenFromList = (screen) => {\r\n    const filteredFeScreens = feSelectedScreens.filter((elem) => elem?.FeScreenId !== screen?.FeScreenId);\r\n    setFeSelectedScreens(filteredFeScreens);\r\n    const filteredPreviewScreens = feSelectedPreviewScreens.filter((elem) => elem?.FeScreenId !== screen?.FeScreenId);\r\n    setFeSelectedPreviewScreens(filteredPreviewScreens);\r\n  };\r\n  const screenList = [\r\n    {\r\n      name: \"Login\",\r\n      imgUrl: {\r\n        small: \"images/img_image62_1.png\",\r\n        large: \"images/img_rectangle179.png\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Signup\",\r\n      imgUrl: {\r\n        small: \"images/img_image62_2.png\",\r\n        large: \"images/img_rectangle179.png\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Product List\",\r\n      imgUrl: {\r\n        small: \"images/img_image62_3.png\",\r\n        large: \"images/img_rectangle179.png\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Product Details\",\r\n      imgUrl: {\r\n        small: \"images/img_image62_4.png\",\r\n        large: \"images/img_rectangle179.png\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Payment Detail\",\r\n      imgUrl: {\r\n        small: \"images/img_image62.png\",\r\n        large: \"images/img_rectangle179.png\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Checkout\",\r\n      imgUrl: {\r\n        small: \"images/img_image62_91x165.png\",\r\n        large: \"images/img_rectangle179.png\",\r\n      },\r\n    },\r\n  ];\r\n  const onsubmitHandler = () => {\r\n    if(project_type === \"Front End\")\r\n        dispatch(ADD_FRONTEND_FETEMPLATES(feSelectedScreens));\r\n    else\r\n      dispatch(ADD_FETEMPLATES(feSelectedScreens));\r\n    navigate(path);\r\n  }\r\n  const deleteAllScreen = () => {\r\n   setFeSelectedScreens([]);\r\n   setFeSelectedPreviewScreens([]);\r\n    }\r\n  const onRequestClose = () => {\r\n    SetFeSelectedScreenToRender(false)\r\n  }\r\n  const updateSelectedUITemplate = async (item) => {\r\n    SetSelectedUITemplate(item);\r\n    console.log(item);\r\n    const selectedTheme = await makeApiRequest('GET',`/Themes(${item?.UITemplateTheme})`);\r\n    console.log(selectedTheme)\r\n    dispatch(SET_FRONTEND_APP_THEMENAME(selectedTheme));\r\n  }\r\n  return (\r\n    <>  \r\n      <FETemplateselectedModal \r\n       addedList={feSelectedPreviewScreens}\r\n       feSelectedScreens={feSelectedScreens}       \r\n       selectedScreen={selectedScreen} \r\n       removeScreenFromList={removeScreenFromList} \r\n       deleteAllScreen = {deleteAllScreen}\r\n       onRequestClose ={onRequestClose}\r\n       feSelectedScreenToRender={feSelectedScreenToRender}\r\n       />\r\n        <div className=\"flex flex-1 flex-col items-center justify-start md:px-[20px] w-[100%] pt-[32px]\">\r\n      <div className=\"flex flex-col items-center justify-start w-[100%]\">\r\n        <div className=\"flex items-start justify-start max-w-[982px] w-[100%]\">\r\n          <div className=\"flex flex-col gap-[20px] items-start justify-start w-[100%]\">\r\n            <div className=\"flex items-start justify-start w-[100%]\">\r\n              <div className=\"flex flex-col gap-[4px] items-start justify-start w-[100%]\">\r\n                <Text\r\n                  className=\"font-medium text-gray_50 text-left w-[auto]\"\r\n                  as=\"h4\"\r\n                  variant=\"h4\"\r\n                >\r\n                  Select Screen\r\n                </Text>\r\n                <Text\r\n                  className=\"font-normal not-italic text-gray_501 text-left w-[auto]\"\r\n                  as=\"h6\"\r\n                  variant=\"h6\"\r\n                >\r\n                  Choose the screens you want in your project\r\n                </Text>\r\n              </div>\r\n            </div>\r\n            <Line className=\"bg-gray_801 h-[1px] w-[100%]\" />\r\n          </div>\r\n        </div>\r\n        {/* mapping screen list */}\r\n        <div className=\"flex md:flex-col flex-row gap-[17px] items-start justify-between w-[100%] max-h-[490px]\">\r\n          <div className=\"flex md:flex-1 items-center justify-start md:mt-[0] mt-[14px] md:w-[100%] w-[44%] h-[490px]\">\r\n            <div className=\"sm:gap-[20px] gap-[24px] grid sm:grid-cols-1 grid-cols-2 justify-center min-h-[auto] w-[100%] max-h-[490px] px-4 overflow-y-auto\">\r\n              {UITemplateList.map((item, index) => {\r\n                return (\r\n                  <>\r\n                      <div className=\"flex flex-col gap-[20px] items-center justify-between w-[100%]\" key={index}>\r\n                        <div\r\n                          onClick={() => updateSelectedUITemplate(item)}\r\n                          className= {`${SelectedUITemplate.TemplateName === item?.TemplateName ? \"bg-bluegray_906 border-[2px] border-solid border-teal_A400\" : \"bg-gray_901\"} flex items-center justify-center h-[108px] rounded-[4px] w-[175px]`}\r\n                        > \r\n                          <Img\r\n                            src=\"https://cdn-icons-png.flaticon.com/128/4869/4869382.png\"\r\n                            className=\"h-[91px] m-[auto] rounded-[4px] w-[92%]\"\r\n                            alt=\"imageSixtyTwo_Two\"\r\n                          />                          \r\n                        </div>\r\n                        <Text\r\n                          className=\"font-normal not-italic text-gray_300 text-left w-[auto]\"\r\n                          as=\"h5\"\r\n                          variant=\"h5\"\r\n                        >\r\n                          {item.TemplateName}\r\n                        </Text>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n          </div>\r\n          {/* showing expanded view for user selected screen on RHS */}\r\n          {Object.keys(SelectedUITemplate).length === 0  ? (\r\n            <div className=\"bg-gray_901 flex md:flex-1 items-center justify-start mb-[128px] p-[128px] sm:px-[20px] md:px-[40px] md:m-[0px] m-[14px] md:w-[100%] w-[56%] h-[490px]\">\r\n              <Text\r\n                className=\"font-normal leading-[150.00%] my-[112px] not-italic text-center text-gray_501 w-[100%]\"\r\n                as=\"h6\"\r\n                variant=\"h6\"\r\n              >\r\n                Select a Template to see it’s capable Screens\r\n              </Text>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"flex flex-col md:gap-[40px] gap-[12px] items-center justify-start mb-[136px] mt-[14px] md:w-[100%] w-[56%] h-[490px]\">\r\n                <div className=\"flex flex-row sm:gap-[40px] items-end justify-between md:w-[100%] w-[96%]\">\r\n                  <Text\r\n                    className=\"font-normal mb-[3px] mt-[8px] not-italic text-gray_50 text-left w-[auto]\"\r\n                    as=\"h5\"\r\n                    variant=\"h5\"\r\n                  >\r\n                    {selectedScreen?.ScreenName}\r\n                  </Text>\r\n                  {!feSelectedScreens?.find(elem => elem?.FeScreenId === selectedScreen?.FeScreenId) ? (\r\n                    <Button\r\n                      onClick={() =>\r\n                        addToSelectedScreen(selectedScreen)\r\n                      }\r\n                      className=\"border-[1px] border-solid border-teal_A400 cursor-pointer font-medium min-w-[115px] sm:px-[20px] px-[24px] py-[8px] rounded-[4px] text-[12px] text-center text-teal_A400 w-[auto]\"\r\n                    >\r\n                      Add Screen\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      onClick={() =>\r\n                        removeScreenFromList(selectedScreen)\r\n                      }\r\n                      className=\"border-[1px] border-solid border-teal_A400 cursor-pointer font-medium min-w-[138px] sm:px-[20px] px-[24px] py-[8px] rounded-[4px] text-[12px] text-center text-teal_A400 w-[auto]\"\r\n                    >\r\n                      Remove Screen\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex items-center justify-start  md:w-[100%] w-[96%]\">\r\n                        <div className=\"flex md:flex-1 items-start justify-start md:mt-[0] mt-[14px] md:w-[100%] w-[100%] h-[450px]\">\r\n            <div className=\"sm:gap-[20px] gap-[24px] grid sm:grid-cols-1 grid-cols-2 justify-center min-h-[auto] w-[100%] max-h-[450px] px-4 overflow-y-auto\">\r\n              {feScreenList.map((item, index) => {\r\n                return (\r\n                  <>\r\n                      <div className=\"flex flex-col gap-[20px] items-center justify-between w-[100%]\" key={index}>\r\n                        <div\r\n                          onClick={() => setSelectedScreen(item)}\r\n                          className={\r\n                            feSelectedScreens?.find(elem => elem?.FeScreenId === item?.FeScreenId) ||\r\n                            selectedScreen.FeScreenId === item?.FeScreenId\r\n                              ? \"bg-gray_901 flex items-center justify-center h-[108px] relative rounded-[4px] w-[175px]\"\r\n                              : \"bg-gray_901 flex h-[108px] items-center justify-start p-[8px] rounded-[4px] w-[175px]\"\r\n                          }\r\n                        > \r\n                          <Img\r\n                            // src={item?.imgUrl?.small}\r\n                            src={`data:image/jpeg;base64,${item?.FrontendScreenScreenshotSmall}`}\r\n                            className=\"h-[91px] m-[auto] object-cover rounded-[4px] w-[92%]\"\r\n                            alt=\"imageSixtyTwo_Two\"\r\n                          />\r\n                          {feSelectedScreens?.find(elem => elem?.FeScreenId === item?.FeScreenId) ? (\r\n                            <div className=\"absolute bg-gray_900_66 flex h-[100%] inset-[0] items-center justify-center m-[auto] p-[74px] sm:px-[20px] md:px-[40px] rounded-[4px] w-[181px]\">\r\n                              <Img\r\n                                src=\"images/img_close_teal_a400.svg\"\r\n                                className=\"cursor-pointer h-[32px] w-[32px]\"\r\n                                alt=\"close\"\r\n                                onClick={() =>\r\n                                  removeScreenFromList(item)\r\n                                }\r\n                              />\r\n                            </div>\r\n                          ) : selectedScreen.FeScreenId === item?.FeScreenId ? (\r\n                            <div className=\"absolute bg-gray_900_66 flex h-[100%] inset-[0] items-center justify-center m-[auto] p-[74px] sm:px-[20px] md:px-[40px] rounded-[4px] w-[181px]\">\r\n                              <Img\r\n                                src=\"images/img_plus_teal_a400.svg\"\r\n                                className=\"cursor-pointer h-[32px] w-[32px]\"\r\n                                alt=\"plus\"\r\n                                onClick={() =>\r\n                                  addToSelectedScreen(item)\r\n                                }\r\n                              />\r\n                            </div>\r\n                          ) : (\r\n                            false\r\n                          )}\r\n                        </div>\r\n                        <Text\r\n                          className=\"font-normal not-italic text-gray_300 text-left w-[auto]\"\r\n                          as=\"h5\"\r\n                          variant=\"h5\"\r\n                        >\r\n                          {item.ScreenName}\r\n                        </Text>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                })}\r\n              </div>\r\n          </div>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"absolute bg-gray_901 flex items-center justify-start p-[11px] right-[0] top-[0] w-[60%]\"> */}\r\n                {/* below code is for showing the expanded view of screen */}\r\n              {/* <div className=\"flex flex-col md:gap-[40px] gap-[88px] items-center justify-start mb-[136px] mt-[14px] md:w-[100%] w-[56%] h-[490px]\">\r\n                <div className=\"flex flex-row sm:gap-[40px] items-end justify-between md:w-[100%] w-[96%]\">\r\n                  <Text\r\n                    className=\"font-normal mb-[3px] mt-[8px] not-italic text-gray_50 text-left w-[auto]\"\r\n                    as=\"h5\"\r\n                    variant=\"h5\"\r\n                  >\r\n                    {selectedScreen?.ScreenName}\r\n                  </Text>\r\n                  {!feSelectedScreens?.find(elem => elem?.ScreenName === selectedScreen?.ScreenName) ? (\r\n                    <Button\r\n                      onClick={() =>\r\n                        addToSelectedScreen(selectedScreen)\r\n                      }\r\n                      className=\"border-[1px] border-solid border-teal_A400 cursor-pointer font-medium min-w-[115px] sm:px-[20px] px-[24px] py-[8px] rounded-[4px] text-[12px] text-center text-teal_A400 w-[auto]\"\r\n                    >\r\n                      Add Screen\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      onClick={() =>\r\n                        removeScreenFromList(selectedScreen)\r\n                      }\r\n                      className=\"border-[1px] border-solid border-teal_A400 cursor-pointer font-medium min-w-[138px] sm:px-[20px] px-[24px] py-[8px] rounded-[4px] text-[12px] text-center text-teal_A400 w-[auto]\"\r\n                    >\r\n                      Remove Screen\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex items-center justify-start  md:w-[100%] w-[96%]\">\r\n                  <Img\r\n                    src= {`data:image/jpeg;base64,${selectedScreen?.FrontendScreenScreenshotBig}`}\r\n                    className=\"h-[332px] md:h-[auto] object-cover rounded-[4px] w-[100%]\"\r\n                    alt=\"rectangle179\"\r\n                  />\r\n                </div>\r\n              </div> */}\r\n              {/* </div>   */}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* page navigation */}\r\n      <div className=\"bg-gray_900 flex flex-col gap-[16px] h-[89px] md:h-[auto] inset-x-[0] items-center justify-start max-w-[982px] mt-[30px] mx-[auto] w-[100%]\">\r\n        <Line className=\"bg-gray_801 h-[1px] w-[100%]\" />\r\n        <div className=\"flex md:flex-col flex-row gap-[20px] items-start justify-start w-[100%]\">\r\n          <FETemplateButton\r\n            className=\"flex sm:flex-1 flex-col items-center justify-center sm:px-[20px] md:px-[40px] px-[4px] py-[0px] rounded-[4px] sm:w-[100%] w-[220px]\"\r\n            text_One={`Selected Screens (${feSelectedScreens.length})`}\r\n            onClick={() => SetFeSelectedScreenToRender(true)}\r\n          />\r\n          <div className=\"flex items-start justify-end w-[100%]\">\r\n          <div className=\"flex flex-row gap-[12px] items-center justify-center pr-2\">\r\n            <ButtonNew\r\n             onClick={() => navigate(-1)}\r\n             children=\"Previous\"\r\n            >\r\n            </ButtonNew>\r\n            <ButtonNew\r\n              isActive={feSelectedScreens.length > 0}\r\n              onClick={() =>\r\n                feSelectedScreens.length > 0 ?\r\n               onsubmitHandler() : null}\r\n              children=\"Next\"\r\n              isSubmit\r\n            >\r\n            </ButtonNew>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </div>       \r\n    </>\r\n  );\r\n};\r\n\r\nexport default FEScreen;\r\n","import React from \"react\";\r\n\r\nimport { Text } from \"components\";\r\n\r\nconst FETemplateButton = (props) => {\r\n  return (\r\n    <>\r\n      <div className={props.className}>\r\n        <Text\r\n          className=\"cursor-pointer font-inter font-medium text-gray_300 text-left w-[auto]\"\r\n          variant=\"body2\"\r\n          onClick={props?.onClick}\r\n        >\r\n          {props?.text_One}\r\n          \r\n        </Text>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFETemplateButton.defaultProps = { text_One: \"Selected Screens (0)\" };\r\n\r\nexport default FETemplateButton;\r\n","import axios from \"axios\";\r\n\r\n// axios.defaults.headers.common['Content-Type'] = 'application/json';\r\n// 'http://54.166.30.141:8081\r\nconst baseUrl = 'https://code-wizard.in/generated_app';\r\n\r\nexport const makeApiRequest = async (method, url, data = null) => {\r\n  try {\r\n    const response = await axios({\r\n      method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      url: `${baseUrl}${url}`,\r\n      data,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('API request error:', error);\r\n    // throw error;\r\n  }\r\n};"],"names":["ButtonNew","_ref","children","onClick","isActive","isSubmit","button","activeButton","concat","inActiveButton","previousButton","_jsx","className","event","defaultProps","style","position","top","left","transform","width","height","bgcolor","boxShadow","props","Modal","open","feSelectedScreenToRender","Box","sx","_jsxs","Text","as","variant","addedList","length","Button","deleteAllScreen","Img","src","onRequestClose","alt","map","item","index","_props$addedList","_props$addedList2","_Fragment","find","elem","FeScreenId","selectedScreen","FrontendScreenScreenshotSmall","removeScreenFromList","ScreenName","path","selected_feTemplates","_useState","useState","_useState2","_slicedToArray","setSelectedScreen","_useState3","_useState4","SetFeSelectedScreenToRender","_useState5","_useState6","feSelectedScreens","setFeSelectedScreens","_useState7","_useState8","feActualScreenList","setFeActualScreenList","_useState9","_useState10","feScreenList","setFescreenList","_useState11","_useState12","UITemplateList","setUiTemplateList","_useState13","_useState14","SelectedUITemplate","SetSelectedUITemplate","_useState15","_useState16","feSelectedPreviewScreens","setFeSelectedPreviewScreens","navigate","useNavigate","dispatch","useDispatch","project_type","useSelector","store","basicInformation","projectType","selected_FeTechnology","_store$frontend$front","frontend","frontend_details","feTeckstack","useEffect","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","uiTemplates","wrap","_context","prev","next","makeApiRequest","FeTechId","sent","value","stop","_x","apply","arguments","_ref3","_callee3","screenListRes","_screenList","extractedList","_context3","TemplateId","AllScreens","console","log","screenList","cloneDeep","Promise","all","_ref4","_callee2","screen","addedItem","smallImage","finVal","bigImage","_finVal","_context2","split","FrontendScreenScreenshotBig","abrupt","_x3","_x2","addToSelectedScreen","screenToAdd","curList","_toConsumableArray","filteredFeScreens","filter","filteredPreviewScreens","updateSelectedUITemplate","_ref5","_callee4","selectedTheme","_context4","UITemplateTheme","SET_FRONTEND_APP_THEMENAME","_x4","FETemplateselectedModal","Line","TemplateName","Object","keys","FETemplateButton","text_One","ADD_FRONTEND_FETEMPLATES","ADD_FETEMPLATES","method","url","data","response","_args","undefined","axios","headers","t0","error"],"sourceRoot":""}